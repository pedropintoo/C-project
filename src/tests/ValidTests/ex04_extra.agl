#(
    This example illustrates the instantiation of a view, a rectangle and a pie slice
    to create a Pacman in a simple time-driven animation.
#)

#
# create an instance of a View.
#
view : View with {
    width = 401;
    height = 401;
    title = "1 Illustrating the rectangle shape";
    background = "wheat";
}

#
# create an instance of a rectangle
#
Rectangle at (10,0) with {
    length = (200,60);
    fill = "blue";
}

#
# create an instance of a pie slice, storing its reference
#
pacman : PieSlice at (0,0) with {
    length = (50,50);
    fill = "pink";
    start = 30;
    extent = 300;
}

food1 : PieSlice at (100,0) with {
    length = (20,20);
    fill = "red";
    start = 89;
    extent = 359;
}

view2 : View with {
    width = 401;
    height = 401;
    title = "2 Illustrating the rectangle shape";
    background = "wheat";
}
#(
Rectangle at (-10,0) with {
    length = (200,60);
    fill = "blue";
}

pacman2 : PieSlice at (0,0) with {
    length = (50,50);
    fill = "pink";
    start = 210;
    extent = 300;
}

food2 : PieSlice at (-100,0) with {
    length = (20,20);
    fill = "red";
    start = 89;
    extent = 359;
}
#)


#
# The refresh view command makes the graphics appear
#
refresh view;
refresh view2;

#
# iteration to make the pacman open and close its mouth and to move 
# both the pacman and the view to the right, such that pacman keeps
# in the center of the view
#
for i in 1..100 do {
    with pacman do {
        start = 1;
        extent = 359;
    }
    #(
    with pacman2 do {
        start = 179;
        extent = 359;
    }
    #)
    food1.state = "hidden";
    # move food2 by (0, -10);
    refresh view after 20 ms;
    refresh view2 after 20 ms;
    with pacman do {
        start = 30;
        extent = 300;
    }
    #(
    with pacman2 do {
        start = 210;
        extent = 300;
    }#)
    refresh view after 25 ms;
    move pacman by (10,0);    # the 'by' makes the movement relative; the argument is a vector
    food1.state = "normal";
    move view by (10,0);    # the 'by' makes the movement relative; the argument is a vector
    # move pacman2 by (-10,0);
    # move view2 by (-10,0);
    # move food2 by (0, 10);
    refresh view;
    refresh view2;
}

food1.state = "hidden";
# food2.state = "hidden";

refresh view;
refresh view2;


print "Press any mouse button to quit";
pos : Point = wait mouse click; # waits for a mouse click

close view2;

print "Press any mouse button to quit";
pos = wait mouse click; # instantiate a Point and waits for a mouse click

close view;
